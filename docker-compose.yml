version: '3.9'

services:
  web:
    build: .
    command: >
      bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    environment:
      - DEBUG=False
      - DATABASE_HOST=db
    volumes:
      - .:/code
      - static_volume:/code/static
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16.0
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER" ]
      interval: 20s
      timeout: 10s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s

  celery:
    build: .
    command: >
      bash -c "celery -A config worker -l INFO -P eventlet"
    env_file:
      - .env
    depends_on:
      - redis
      - db

  celery_beat:
    build: .
    env_file:
      - .env
    command: >
      bash -c "celery -A config beat -l INFO"
    depends_on:
      - redis
      - db

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf


networks:
  default:

volumes:
  postgres_data:
  static_volume: